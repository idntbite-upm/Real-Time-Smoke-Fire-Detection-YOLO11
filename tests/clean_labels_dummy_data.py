import os
import random
from tests import TEST_DATA_DIR


def generate_test_labels():
    # Ensure test dataset structure exists
    base_path = f'{str(TEST_DATA_DIR)}/train/labels'
    os.makedirs(base_path, exist_ok=True)

    # Test case 1: Valid YOLO Labels
    with open(os.path.join(base_path, 'test_valid.txt'), 'w') as f:
        f.write("0 0.5 0.5 0.3 0.4\n")
        f.write("1 0.2 0.3 0.1 0.2\n")

    # Test case 2: Invalid Coordinate Labels
    with open(os.path.join(base_path, 'test_invalid_coords.txt'), 'w') as f:
        f.write("0 1.2 0.5 0.3 0.4\n")
        f.write("1 -0.1 1.3 0.1\n")
        f.write("0 0.5 0.5 0.3 0.4\n")  # One valid label

    # Test case 3: Polygon Conversion Labels
    with open(os.path.join(base_path, 'test_polygon.txt'), 'w') as f:
        f.write("0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8\n")
        f.write("1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9\n")

    # Test case 4: Duplicate Labels
    with open(os.path.join(base_path, 'test_duplicates.txt'), 'w') as f:
        f.write("0 0.5 0.5 0.3 0.4\n")
        f.write("0 0.5 0.5 0.3 0.4\n")
        f.write("1 0.2 0.3 0.1 0.2\n")
        f.write("1 0.2 0.3 0.1 0.2\n")

    # Test case 5: Mixed Complex Labels
    with open(os.path.join(base_path, 'test_mixed.txt'), 'w') as f:
        f.write("0 0.5 0.5 0.3 0.4\n")
        f.write("1 1.5 0.2 0.1 0.2\n")
        f.write("0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8\n")

    # Create dummy image files
    images_path = f'{TEST_DATA_DIR}/train/images'
    os.makedirs(images_path, exist_ok=True)

    # Create dummy images with matching names to label files
    for label_file in os.listdir(base_path):
        image_file = label_file.replace('.txt', '.jpg')
        with open(os.path.join(images_path, image_file), 'wb') as f:
            # Create a small dummy image
            f.write(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x00\x00\x01\x00\x01\x00\x00\xff\xdb\x00C\x00\x08\x06\x06\x07\x06\x05\x08\x07\x07\x07\t\t\x08\n\x0c\x14\r\x0c\x0b\x0b\x0c\x19\x12\x13\x0f\x14\x1d\x1a\x1f\x1e\x1d\x1a\x1c\x1c\x20\x24.\'\x1e\x22,#\x1c\x1c(7\x2c\x30\x31\x34\x34\x34\x1f\x27\x39\x3d\x38\x32\x3c\x2e\x33\x34\x32\xff\xdb\x00C\x01\t\t\t\x0c\x0b\x0c\x18\r\r\x18/\x1a\x1c/2111//2)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\xff\xc0\x00\x11\x08\x00\x01\x00\x01\x03\x01"\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1f\x00\x00\x01\x05\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\xff\xc4\x00\xb5\x10\x00\x02\x01\x03\x03\x02\x04\x03\x05\x05\x04\x04\x00\x00\x01\x7d\x01\x02\x03\x00\x04\x11\x05\x12!1A\x06\x13Qa\x07"q\x14$\x91\xa1\x08\x22\x42\xb1\xc1\x15\x52\xd1\xf0#B\x16\x33\x62\xa2\xb2\xc2\r\x17$\x92\x16%\x18\x19\x1a&\'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\x83\x84\x85\x86\x87\x88\x89\x8a\x92\x93\x94\x95\x96\x97\x98\x99\x9a\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xff\xc4\x00\x1f\x01\x00\x03\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\xff\xc4\x00\xb5\x11\x00\x02\x01\x02\x04\x04\x03\x04\x07\x05\x04\x04\x00\x01\x02w\x00\x01\x02\x03\x11\x04\x05!1\x06\x12AQ\x07aq\x13\x222\x81\x08\x14B\x91\xa1\xb1\xc1\t#3R\xf0\x15br\xd1\n\x16$%\x17\x18\x19\x1a&\'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x92\x93\x94\x95\x96\x97\x98\x99\x9a\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xff\xd9')

    print("Test label files and dummy images generated successfully!")


if __name__ == '__main__':
    generate_test_labels()


# correct way to run the code is python -m tests.clean_labels_dummy_data
